<%@page import="net.mind_engine.oculus.domain.user.User"%>
<%@ include file="/include.jsp" %>
<%@ taglib tagdir="/WEB-INF/tags" prefix="tag" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<jsp:directive.page import="net.mind_engine.oculus.web.SessionViewHandler"/>
<%@ include file="/session-handler.jsp" %>

<%@page import="java.util.List"%>
<%@page import="java.util.Map"%>
<%@page import="com.sdicons.json.model.JSONValue"%>
<%@page import="com.sdicons.json.mapper.JSONMapper"%><div class="breadcrump">
    <a href="../project/display-${project.path}"><img src="../images/workflow-icon-project.png"/> ${project.name}</a> 
    <img src="../images/breadcrump-arrow.png"/> 
    <img src="../images/workflow-icon-library.png"/> Document Library
</div>

<script>


<%
/*
 * Exporting the customization parameters to JSON format so we could use those in the test-case layout
 */

User user = (User)pageContext.findAttribute("user");
if(user!=null)
{
    out.println("var userId = "+user.getId());
}
else
{
    out.println("var userId = 0;");
}
 
 
List<Map<String,Object>> customizationGroups = (List<Map<String,Object>>)pageContext.findAttribute("customizationGroups");
JSONValue jsonValue =  JSONMapper.toJSON(customizationGroups);
String js = jsonValue.render(false);
out.println("var testCaseCustomizationGroups = "+js+";");
%>

var iframeUploaderCounter=0;
function onIframeFileUploaderLoad()
{
	if(iframeUploaderCounter==0)
	{
		iframeUploaderCounter++;
		return;
	}
	//Handling the file uploading

	var responseText = frames.iframeFileUploader.document.forms.formResponse.response.value;	
	var response = eval("("+responseText+")");
	if(response.result=="error")
	{
		alert(response.type+":\n"+response.text);
	}
	else if(response.result=="file-uploaded")
	{
		var id = "dfl"+response.object.id;
		var pid = "";
		if(response.object.folderId<1)
		{
			pid = "p"+response.object.projectId;
		}
		else pid = "f"+response.object.folderId;
		var name = response.object.name;
		if(response.object.typeExtended!=null && response.object.typeExtended!="")
		{
			name+="."+response.object.typeExtended;
		}
		tree.insertNewChild(
                pid,
                id,
                name,
                0,
                "leaf.gif",
                "leaf.gif",
                "leaf.gif",
                "CHECKED"
                );
	    tree.setCheck(id, false);
        hideAllLayouts();
	}
	else if(response.result=="file-edited") {
		var id = "dfl"+response.object.id;
		var name = response.object.name;
        if(response.object.typeExtended!=null && response.object.typeExtended!="") {
            name+="."+response.object.typeExtended;
        }
        tree.setItemText(id,name);
    }
	else if(response.result = "attachment-uploaded") {
		var id = currentLayout.document.attachments.length;
		currentLayout.document.attachments[id] = response.object;
		document.getElementById("divTestCaseAttachmentsLayout").innerHTML = renderAttachmentsLayout(currentLayout.document.attachments);
		document.forms.formAttachmentUpload.attachmentName.value = "";
		document.forms.formAttachmentUpload.attachmentDescription.value = "";
		document.forms.formAttachmentUpload.file.value = "";
	}    
}

</script>

<tag:pickuser-setup></tag:pickuser-setup>

<div style="display:none;">
<iframe name="iframeFileUploader" onload="onIframeFileUploaderLoad();"></iframe>
</div>

<script>
var currentLayout = null;

var showInformationTimer = null;
var showTCInformationTimer = null;

 
var _MODE_PREVIEW = 2;
var _MODE_TABLE = 0;
var _MODE_ADVANCED = 1;

var testCaseEditMode = _MODE_PREVIEW;



function decorateBBCode(value)
{
	value=value.replace(/\n/gi,"<br />");
	value=value.replace(/\[b\]/gi,"<b>");
	value=value.replace(/\[\/b\]/gi,"</b>");
	value=value.replace(/\[i\]/gi,"<i>");
	value=value.replace(/\[\/i\]/gi,"</i>");
	value=value.replace(/\[u\]/gi,"<u>");
	value=value.replace(/\[\/u\]/gi,"</u>");
	value=value.replace(/\[ul\]/gi,"<ul>");
	value=value.replace(/\[\/ul\]/gi,"</ul>");
	value=value.replace(/\[li\]/gi,"<li>");
	value=value.replace(/\[\/li\]/gi,"</li>");
	value=value.replace(/\[url=([^\]]+)\](.*?)\[\/url\]/gi,"<a href=\"$1\">$2</a>");
	value=value.replace(/\[url\](.*?)\[\/url\]/gi,"<a href=\"$1\">$1</a>");
	value=value.replace(/\[img\](.*?)\[\/img\]/gi,"<img src=\"$1\" />");
	value=value.replace(/\[color=(.*?)\](.*?)\[\/color\]/gi,"<font color=\"$1\">$2</font>");
	value=value.replace(/\[size=(.*?)\](.*?)\[\/size\]/gi,"<font size=\"$1\">$2</font>");
	value=value.replace(/\[parameter\](.*?)\[\/parameter\]/gi,"<img src=\"../images/small-gear.png\" /><font color=\"#ff00ff\">$1</font>");
	
	return value;
}

function turnTestCaseStepEditOn(id, type)
{
	if(currentLayout!=null)
	{
		var strType = "";
		if(type==1)
		{
			strType = "Action_"
		}
		else strType = "Expected_";
		
		var div = document.getElementById("divTestCaseStep"+strType+id);
		var textarea = document.getElementById("testCaseStep"+strType+id);
		if(div!=null && textarea!=null)
		{
			div.style.display = "none";
			textarea.style.display = "block";
		}
	}
}
function turnTestCaseStepEditOff(id,type)
{
	if(currentLayout!=null)
	{
		var strType = "";
		if(type==1)
		{
			strType = "Action_"
		}
		else strType = "Expected_";
	
		var div = document.getElementById("divTestCaseStep"+strType+id);
		var textarea = document.getElementById("testCaseStep"+strType+id);
		if(div!=null && textarea!=null)
		{
			div.style.display = "block";
			textarea.style.display = "none";
			
			div.innerHTML = decorateBBCode(textarea.value);
		}
	}
}

var _previousEditedStep = null;
/**
* this function is called each time the user clicks on step in order to edit it
type - can be 1 or 2 (action or expected)
*/
function onEditTestCaseStep(id,type)
{
	if(currentLayout!=null && userId>0)
	{
		turnTestCaseStepEditOn(id, type);
		var textarea = null;
		if(type==1)
		{
			textarea = document.getElementById("testCaseStepAction_"+id);
		}
		else textarea = document.getElementById("testCaseStepExpected_"+id);
		textarea.focus();
	}
}

function hideAllLayouts()
{
    if(currentLayout!=null)
    {
        currentLayout.div.style.display="none";
        currentLayout = null;
    }
    var div = document.getElementById("divForFolderOperations");
    div.style.display = "none";

    div = document.getElementById("divForFileOperations");
    div.style.display = "none";

    div = document.getElementById("divForTestcaseOperations");
    div.style.display = "none";

    div = document.getElementById("testCaseInfo");
    if(div!=null){
        div.style.display = "none";
    }

    var divShadow = document.getElementById("divShadow");
    if(divShadow != null)
    {
        divShadow.style.display = "none";
    }
}

function onTreeElementSelect()
{
    hideAllLayouts();
    window.scrollTo(0,0);
    var selectId = tree.getSelectedItemId();
    
    if(selectId!=null && selectId!="")
    {
        if(selectId[0]=='p')
        {
            folderId = 0;
            if(userId>0)
            {
            	showForFolderOperations();            	
            }
        }
        else if(selectId[0]=='f')
        {
            folderId = selectId.substring(1);
            if(userId>0)
            {
                showForFolderOperations();              
            }
        }
        else if(selectId[0]=='d')
        {
            if(selectId.substring(1,3)=="tc")
            {
                //Clicked on test-case
                loadTestCase(selectId.substring(3));
            }
            else if(selectId.substring(1,3)=="fl")
            {
                //Clicked on file
                loadFileDocument(selectId.substring(3));
            }
        }
        
    }
}
function showForFolderOperations()
{
    var div = document.getElementById("divForFolderOperations");
    div.style.display = "block";
}
function showForFileOperations()
{
    var div = document.getElementById("divForFileOperations");
    div.style.display = "block";
}
function showForTestcaseOperations()
{
    var div = document.getElementById("divForTestcaseOperations");
    div.style.display = "block";
}

function showInformation(text)
{
	if(showInformationTimer!=null)
	{
		clearTimeout(showInformationTimer);
	}
	var div = document.getElementById("divInformationBox");
	div.innerHTML = text;
	showInformationTimer = setTimeout("hideInformation();", 2000);
}
function hideInformation()
{
	showInformationTimer = null;
	var div = document.getElementById("divInformationBox");
	div.innerHTML = "";
}

function showTCInformation(text)
{
    if(showTCInformationTimer!=null)
    {
        clearTimeout(showTCInformationTimer);
    }
    var div = document.getElementById("divTCInformationBox");
    div.innerHTML = text;
    showTCInformationTimer = setTimeout("hideTCInformation();", 2000);
}
function hideTCInformation()
{
    showTCInformationTimer = null;
    var div = document.getElementById("divTCInformationBox");
    div.innerHTML = "";
}



function showLoadingIcon()
{
    var div = document.getElementById("divLoadingIcon");
    div.style.display = "block";
}
function hideLoadingIcon()
{
    var div = document.getElementById("divLoadingIcon");
    div.style.display = "none";
}

function showTCLoadingIcon()
{
    var div = document.getElementById("divTCLoadingIcon");
    div.style.display = "block";
}
function hideTCLoadingIcon()
{
    var div = document.getElementById("divTCLoadingIcon");
    div.style.display = "none";
}

function Layout()
{
	this.name = null;
	this.div = null;
	this.document = null;
}
function TestCaseLayout()
{
	this.name = null;
    this.div = null;
    this.document = null;
    this.testCaseName = null;
    this.testCaseDescription = null;
}
function TestCaseStep()
{
	this.number = 0;
	this.action = "";
	this.expected = "";
}
function TestCase()
{
	this.id = null;
	this.projectId = currentProjectId;
	this.folderId = null;
	this.name = null;
	this.description = null;
	this.steps = new Array();
}
function createTestCaseLayout()
{
    
	document.getElementById("divTCCustomizationLayout").innerHTML = generateCustomizationLayout(testCaseCustomizationGroups);
	
	if(currentLayout!=null)
    {
        currentLayout.div.style.display="none";
    }
	currentLayout = new TestCaseLayout();
	currentLayout.div = document.getElementById("divTestCaseLayout");
	currentLayout.testCaseName = document.getElementById("testCaseName");
	currentLayout.testCaseDescription = document.getElementById("testCaseDescription");
    currentLayout.document = new TestCase();

    //Creating steps table
    
    var table = document.createElement("table");
    var thead = document.createElement("thead");
    var tbody = document.createElement("tbody");

    //Creating header
    var tr = document.createElement("tr");
    var td = document.createElement("td");
    td.setAttribute("width", "60px");
    td.setAttribute("class","test-case-table");
    td.appendChild(document.createTextNode("Number"));
    tr.appendChild(td);

    td = document.createElement("td");
    td.setAttribute("width", "50%");
    td.setAttribute("class","test-case-table");
    td.appendChild(document.createTextNode("Action"));
    tr.appendChild(td);

    td = document.createElement("td");
    td.setAttribute("width", "50%");
    td.setAttribute("class","test-case-table");
    td.appendChild(document.createTextNode("Expected Result"));
    tr.appendChild(td);

    td = document.createElement("td");
    td.setAttribute("width", "50px");
    td.setAttribute("style","border:none;background:none;");
    tr.appendChild(td);
    
    thead.appendChild(tr);
    
    table.appendChild(thead);
    table.appendChild(tbody);
    table.setAttribute("class","test-case-table");
    table.setAttribute("id","testCaseStepsTable");
    currentLayout.stepsTbody = tbody;
    
    table.setAttribute("width", "100%");
    table.setAttribute("border", "0");
    var div = document.getElementById("divTestCaseSteps");
    div.innerHTML = "";
    div.appendChild(table);	

    div = document.getElementById("testCaseInfo");
    if(div!=null){
        div.style.display = "block";
    }
    
	return currentLayout;
}
function lineBreakCount(str){
    try {
        return((str.match(/[^\n]*\n[^\n]*/gi).length));
    } catch(e) {
        return 0;
    }
}

function onTestCaseStepTextareaKeyDown(id)
{
	var t1 = document.getElementById("testCaseStepAction_"+id);
	var t2 = document.getElementById("testCaseStepExpected_"+id);

    var lines1 = lineBreakCount(t1.value);
	var lines2 = lineBreakCount(t2.value);

	var max = 0;
	if(lines1>lines2) max = lines1; else max = lines2;
    if(max>5)
    {
        t1.rows = max+1;
        t2.rows = max+1;
    }
    else
    {
        t1.rows = 5;
        t2.rows = 5;
    }
}
function addTestCaseStepLayout(id)
{
	var tr = document.createElement("tr");
    var td = null;
    var textarea = null;

    td = document.createElement("td");
    td.setAttribute("valign", "top");
    var num = id+1;
    td.innerHTML = "<div style=\"text-align:center;padding-top:5px;width:100%;\">"+num+"</div>";
    
    td.setAttribute("class","test-case-table");
    tr.appendChild(td);

    td = document.createElement("td");
    textarea = document.createElement("textarea");
    var strTableDisplay = "none";
    var strPreviewDisplay="block";
    if(testCaseEditMode==_MODE_TABLE){
    	strTableDisplay = "block";
    	strPreviewDisplay = "none";
    }
    
    textarea.setAttribute("style", "width:100%;display:"+strTableDisplay+";padding:5px;");
    textarea.setAttribute("rows", "5");
    textarea.setAttribute("onclick","onTestCaseStepTextareaKeyDown("+id+");");
	textarea.setAttribute("name", "action_"+id);
    textarea.setAttribute("id", "testCaseStepAction_"+id);
    textarea.setAttribute("onkeydown","onTestCaseStepTextareaKeyDown("+id+");");
	var divContent = document.createElement("div");
	divContent.setAttribute("id", "divTestCaseStepAction_"+id);
	divContent.setAttribute("style", "padding:5px;min-height:70px;display:"+strPreviewDisplay+";");
	
	td.appendChild(divContent);
    td.appendChild(textarea);
    td.setAttribute("class","test-case-table");
	td.setAttribute("style","background:#ffffff;font-size:10pt;font-family:Courier New;");
	td.setAttribute("id","tdTestCaseStepAction_"+id);
    tr.appendChild(td);

    td = document.createElement("td");
    textarea = document.createElement("textarea");
    textarea.setAttribute("style", "width:100%; display:"+strTableDisplay+";padding:5px;");
    textarea.setAttribute("rows", "5");
    textarea.setAttribute("onclick","onTestCaseStepTextareaKeyDown("+id+");");
    textarea.setAttribute("name", "expected_"+id);
    textarea.setAttribute("id", "testCaseStepExpected_"+id);
    textarea.setAttribute("onkeydown","onTestCaseStepTextareaKeyDown("+id+");");
    var divContent = document.createElement("div");
	divContent.setAttribute("id", "divTestCaseStepExpected_"+id);
	divContent.setAttribute("style", "padding:5px;min-height:70px;display:"+strPreviewDisplay+";");
	td.appendChild(divContent);
	td.appendChild(textarea);
    td.setAttribute("class","test-case-table");
	td.setAttribute("style","background:#ffffff;font-size:10pt;font-family:Courier New;");
	td.setAttribute("id","tdTestCaseStepExpected_"+id);
	tr.appendChild(td);

    td = document.createElement("td");
    if(userId>0)
    {
    	var menu = "<div class=\"test-case-row-menu\">";
        menu+="<a href=\"javascript:moveTestCaseStepUp("+id+");\" title=\"Move up\"><img src=\"../images/document-test-case-menu-up.png\"/></a><br/>";
        menu+="<a href=\"javascript:moveTestCaseStepDown("+id+");\" title=\"Move down\"><img src=\"../images/document-test-case-menu-down.png\"/></a><br/>";
        menu+="<a href=\"javascript:removeTestCaseStep("+id+");\" title=\"Remove\"><img src=\"../images/document-test-case-menu-remove.png\"/></a><br/>";
        menu+="<a href=\"javascript:insertTestCaseStepBelow("+id+");\" title=\"Insert row below\"><img src=\"../images/document-test-case-menu-insert.png\"/></a>";
        menu+="</div>";
        td.innerHTML = menu;	
    }
    
    td.setAttribute("style","border:none;background:none;vertical-align:top;width:25px;");
    tr.appendChild(td);
    
    currentLayout.stepsTbody.appendChild(tr);
}
function addTestCaseStep()
{
    var id = currentLayout.document.steps.length;
    var step = new TestCaseStep();
    step.number = id;
    addTestCaseStepLayout(id);
    currentLayout.document.steps[id] = step;
}
function moveTestCaseStepUp(id)
{
	if(id>0)
	{
	    var action_1 = document.getElementById("testCaseStepAction_"+id);
	    var expected_1 = document.getElementById("testCaseStepExpected_"+id);
	    var action_2 = document.getElementById("testCaseStepAction_"+(id-1));
	    var expected_2 = document.getElementById("testCaseStepExpected_"+(id-1));

	    var tmp = action_1.value;
	    action_1.value = action_2.value;
	    action_2.value = tmp;

	    tmp = expected_1.value;
	    expected_1.value = expected_2.value;
	    expected_2.value = tmp;
		
		
		var divAction_1 = document.getElementById("divTestCaseStepAction_"+id);
	    var divExpected_1 = document.getElementById("divTestCaseStepExpected_"+id);
	    var divAction_2 = document.getElementById("divTestCaseStepAction_"+(id-1));
	    var divExpected_2 = document.getElementById("divTestCaseStepExpected_"+(id-1));
		
		divAction_1.innerHTML = decorateBBCode(action_1.value);
		divAction_2.innerHTML = decorateBBCode(action_2.value);
		divExpected_1.innerHTML = decorateBBCode(expected_1.value);
		divExpected_2.innerHTML = decorateBBCode(expected_2.value);
	}
}
function moveTestCaseStepDown(id)
{
    if(id<currentLayout.document.steps.length-1)
    {
    	var action_1 = document.getElementById("testCaseStepAction_"+id);
        var expected_1 = document.getElementById("testCaseStepExpected_"+id);
        var action_2 = document.getElementById("testCaseStepAction_"+(id+1));
        var expected_2 = document.getElementById("testCaseStepExpected_"+(id+1));

        var tmp = action_1.value;
        action_1.value = action_2.value;
        action_2.value = tmp;

        tmp = expected_1.value;
        expected_1.value = expected_2.value;
        expected_2.value = tmp;
		
		var divAction_1 = document.getElementById("divTestCaseStepAction_"+id);
	    var divExpected_1 = document.getElementById("divTestCaseStepExpected_"+id);
	    var divAction_2 = document.getElementById("divTestCaseStepAction_"+(id+1));
	    var divExpected_2 = document.getElementById("divTestCaseStepExpected_"+(id+1));
		
		divAction_1.innerHTML = decorateBBCode(action_1.value);
		divAction_2.innerHTML = decorateBBCode(action_2.value);
		divExpected_1.innerHTML = decorateBBCode(expected_1.value);
		divExpected_2.innerHTML = decorateBBCode(expected_2.value);
    }
}
function insertTestCaseStepBelow(id)
{
	var lastId = currentLayout.document.steps.length;
	addTestCaseStepLayout(lastId);
	currentLayout.document.steps[lastId] = new TestCaseStep(); 

	for(var i = lastId;i>id+1;i--)
	{
		var action_1 = document.getElementById("testCaseStepAction_"+i);
        var expected_1 = document.getElementById("testCaseStepExpected_"+i);
        var action_2 = document.getElementById("testCaseStepAction_"+(i-1));
        var expected_2 = document.getElementById("testCaseStepExpected_"+(i-1));

        action_1.value = action_2.value;
        expected_1.value = expected_2.value;
        turnTestCaseStepEditOff(i,1);
        turnTestCaseStepEditOff(i,2);
	}
	
	var action_1 = document.getElementById("testCaseStepAction_"+(id+1));
    var expected_1 = document.getElementById("testCaseStepExpected_"+(id+1));
    action_1.value="";
    expected_2.value="";
    
    turnTestCaseStepEditOff(id+1,1);
    turnTestCaseStepEditOff(id+1,2);
}
function removeTestCaseStep(id)
{
	if(currentLayout.document.steps.length>1)
	{
		for(var i = id;i<currentLayout.document.steps.length-1;i++)
	    {
	        var action_1 = document.getElementById("testCaseStepAction_"+i);
	        var expected_1 = document.getElementById("testCaseStepExpected_"+i);
	        var action_2 = document.getElementById("testCaseStepAction_"+(i+1));
	        var expected_2 = document.getElementById("testCaseStepExpected_"+(i+1));
	
	        
	        action_1.value = action_2.value;
	        expected_1.value = expected_2.value;
	        
	        turnTestCaseStepEditOff(i,1);
	        turnTestCaseStepEditOff(i,2);
	    }
	    currentLayout.document.steps.splice(id,1);
	
	    var table = document.getElementById("testCaseStepsTable");
	    var tr = table.childNodes.item(1).childNodes.item(currentLayout.document.steps.length);
	    table.childNodes.item(1).removeChild(tr);
	    updateTestCaseModel();
	}
	else
	{
		var action = document.getElementById("testCaseStepAction_0");
        var expected = document.getElementById("testCaseStepExpected_0");
        action.value = "";
        expected.value = "";
	}
	
}

function renderTestCaseByModel(doc)
{
	clearTestCaseSteps();
	for(var i=0;i<doc.steps.length;i++)
    {
		addTestCaseStepLayout(i);
		var divAction = document.getElementById("testCaseStepAction_"+i);
        var divExpected = document.getElementById("testCaseStepExpected_"+i);
        divAction.value = doc.steps[i].action;
        divExpected.value = doc.steps[i].expected;
		
		divAction = document.getElementById("divTestCaseStepAction_"+i);
        divExpected = document.getElementById("divTestCaseStepExpected_"+i);
		
        divAction.innerHTML = decorateBBCode((doc.steps[i].action));
        divExpected.innerHTML = decorateBBCode((doc.steps[i].expected));
    }
	
}
function clearTestCaseSteps()
{
    if (currentLayout.stepsTbody.hasChildNodes() )
    {
        while (currentLayout.stepsTbody.childNodes.length >= 1 )
        {
            currentLayout.stepsTbody.removeChild(currentLayout.stepsTbody.firstChild );       
        } 
    }   
}
function scrollToElement(theElement){

	  var selectedPosX = 0;
	  var selectedPosY = 0;
	              
	  while(theElement != null){
	    selectedPosX += theElement.offsetLeft;
	    selectedPosY += theElement.offsetTop;
	    theElement = theElement.offsetParent;
	  }
	                                      
	 window.scrollTo(selectedPosX,selectedPosY);

	}

/**
 * Updates all data edited by the user in the layout to the test-case document model
 * Returns the istnace of the test-case document model
 */
function updateTestCaseModel()
{
    var doc = currentLayout.document;
    doc.name = currentLayout.testCaseName.value;
    doc.description = currentLayout.testCaseDescription.value;

    var i = 0;
    for(i=0; i<doc.steps.length; i++)
    {
        doc.steps[i].id = i;
        doc.steps[i].action = document.getElementById("testCaseStepAction_"+i).value;
        doc.steps[i].expected = document.getElementById("testCaseStepExpected_"+i).value;
    }
    return doc;
}
function updateTestCaseModelAdvancedMode()
{
	var doc = currentLayout.document;
    doc.name = currentLayout.testCaseName.value;
    doc.description = currentLayout.testCaseDescription.value;

    doc.steps = [];

    var str = document.getElementById("tcAdvancedModeTextarea").value;
    var lines = str.split(/\r\n|\r|\n/g);

    if(lines!=null)
    {
        var currentStepId = -1;
        var lineToAction = false;
        for(var i=0; i<lines.length; i++)
        {
            var firstSymbol = lines[i].substr(0,1);
            if(firstSymbol == '@' || firstSymbol == '#')
            {
                lineToAction = true;
                
				currentStepId = doc.steps.length;
                doc.steps[currentStepId] =  new TestCaseStep();
                doc.steps[currentStepId].action = lines[i].substr(1);
            }
            else if (firstSymbol == '^')
            {
                if(!lineToAction)
                {
                    currentStepId = doc.steps.length;
                    doc.steps[currentStepId] =  new TestCaseStep();
                }
                
				if(currentStepId>=0)
				{
					doc.steps[currentStepId].expected = lines[i].substr(1);
				}
                lineToAction=false;
            }
            else
            {
                if(lineToAction)
                {
					if(currentStepId>=0)doc.steps[currentStepId].action+= "\n"+lines[i];
                }
                else
                {
                	if(currentStepId>=0)doc.steps[currentStepId].expected += "\n"+lines[i];
                }
            }
        }
    }
    return doc; 
}

/**
 * This fuction is used for both cases: creating new and saving existing test-case
 */
function saveTestCase()
{
    showTCLoadingIcon();
    
    
    if(testCaseEditMode == _MODE_ADVANCED){
    	doc = updateTestCaseModelAdvancedMode();
    }
    else {
    	doc = updateTestCaseModel();
    }
    
    
    var url = "";
    var d = new Date();
    var str = ""+d.getDate()+""+d.getMonth()+""+d.getSeconds()+""+d.getMilliseconds();
    var params = "tmstp="+str;
    
    if(doc.id==null || doc.id<0)
    {
        //Creating a new test case
        url = "../document/testcase-create";
    }
    else 
    {
        //Updating the already created test-case
        url = "../document/testcase-edit";
        params+= "&id="+doc.id;
    }
    params+="&name="+escapeURIText(doc.name);
    params+="&description="+escapeURIText(doc.description);
    params+="&stepsCount="+doc.steps.length;
    params+="&projectId="+doc.projectId;
    params+="&folderId="+doc.folderId;

    var i=0;
    for(i=0;i<doc.steps.length;i++)
    {
        params+="&stepAction_"+i+"="+escapeURIText(doc.steps[i].action);
        params+="&stepExpected_"+i+"="+escapeURIText(doc.steps[i].expected);
    }

    //Collecting customization parameters
    
    for(var j=0; j<testCaseCustomizationGroups.length; j++)
    {
        for(var i=0; i<testCaseCustomizationGroups[j].customizations.length; i++)
        {
            var c = testCaseCustomizationGroups[j].customizations[i];
            if(c.customization.type=="text")
            {
                params+="&customization_"+c.customization.id+"="+escape(document.getElementById("tcCustomizationParameter_"+c.customization.id).value);
            }
            else if(c.customization.type=="assignee")
            {
            	params+="&customization_"+c.customization.id+"="+escape(document.getElementById("tcCustomizationParameter_"+c.customization.id).value);
            }
            else if(c.customization.type=="list")
            {
                var select = document.getElementById("tcCustomizationParameter_"+c.customization.id);
                if(select.selectedIndex>=0)
                {
                    params+="&customization_"+c.customization.id+"="+select.options[select.selectedIndex].value;
                }
            }
            else if(c.customization.type=="checkbox")
            {
            	var checkbox = document.getElementById("tcCustomizationParameter_"+c.customization.id);
            	if(checkbox.checked)
            	{
            		params+="&customization_"+c.customization.id+"=on";
            	}
            }
            else if(c.customization.type=="checklist")
            {
                for(var k=0; k<c.possibleValues.length; k++)
                {
                    var pv = c.possibleValues[k];
                    var checkbox = document.getElementById("tcCustomizationParameter_"+c.customization.id+"_pv_"+pv.id);
                    if(checkbox.checked)
                    {
                    	params+="&customization_"+c.customization.id+"_pv_"+pv.id+"=on";
                    }
                }
                
            }
            
        }
    }

    dhtmlxAjax.post(url, params, onSaveTestCaseResponse);
}

function renderAttachmentsLayout(attachments){
	if(attachments==null || attachments.length==0){
		return "There are no attachments";
	}
	
	var str = "";
    str += "<table border='0'>";
    for(var i=0; i<attachments.length; i++){
    	str += "<tr>";
    	str += "<td><a href='../document/attachment-download?id=" + attachments[i].id + "'><img src='../images/workflow-icon-attachment.png'/> "+escapeHTML(attachments[i].name)+"</a></td>";
    	str += "<td width='100px'><a href='javascript:deleteDocumentAttachment(" + attachments[i].id+ ");' class='red'><img src='../images/workflow-icon-delete.png'/> Remove</a></td>";
        str += "</tr>";
    }
    str += "</table>";
    return str;
}

function loadTestCase(id)
{
	showLoadingIcon();

	dhtmlxAjax.post("../document/testcase-display", "id="+id, onLoadTestCaseResponse);
}
function onLoadTestCaseResponse(loader)
{
	hideLoadingIcon();

	var str = loader.xmlDoc.responseText;
    var response = eval("("+str+")");

    if(response.result == "test-case")
    {
    	var testCaseLayout = createTestCaseLayout();
        testCaseLayout.div.style.display = "block";
        
        currentLayout.testCaseName.value = response.object.document.name;
        currentLayout.testCaseDescription.value = response.object.document.description;
        
        for(var i=0;i<response.object.steps.length;i++)
        {
            addTestCaseStep();
        }
		

        testCaseLayout.document = response.object;
        testCaseLayout.document.id = response.object.document.id;
        testCaseLayout.document.name = response.object.document.name;
        testCaseLayout.document.description = response.object.document.description;
        testCaseLayout.document.attachments = response.object.document.attachments;
        var btn = document.getElementById("buttonTestCaseSubmit");
        if(btn!=null){
            btn.value = "Save";
            btn.setAttribute("onclick","saveTestCase();");
        }
		renderTestCaseByModel(testCaseLayout.document);

        //Setting all the customization parameters
        var customizationGroups = response.object.customizationGroups;
        for(var j=0; j<customizationGroups.length; j++)
        {
            for(var i=0; i<customizationGroups[j].customizations.length; i++)
            {
                var c = customizationGroups[j].customizations[i];
                if(c.customization.type == "text")
                {
                    var control = document.getElementById("tcCustomizationParameter_"+c.customization.id);
                    if(control!=null)control.value = c.customization.value;
                }
                else if(c.customization.type=="assignee")
                {
                	var control = document.getElementById("tcCustomizationParameter_"+c.customization.id);
                    if(control!=null)control.value = c.customization.value;

                    var link = document.getElementById("tcCustomizationParameter_"+c.customization.id+"Link");
                    if(link!=null && c.assignedUser!=null)
                    {
                        link.innerHTML = escapeHTML(c.assignedUser.name);
                    }
                }
                else if(c.customization.type=="list")
                {
                	var control = document.getElementById("tcCustomizationParameter_"+c.customization.id);
                    if(control!=null)
                    {
                        var bFound = false;
                        for(var ci = 0; ci<control.length&&!bFound; ci++)
                        {
                            if(control.options[ci].value==c.customization.value)
                            {
                                bFound = true;
                                control.selectedIndex = ci;
                            }
                        }
                    }
                }
                else if(c.customization.type=="checkbox")
                {
                	var control = document.getElementById("tcCustomizationParameter_"+c.customization.id);
                	if(control!=null)
                	{
                    	if(c.customization.value=="true")
                    	{
                        	control.checked = true;
                    	}
                    	else control:checked = false;
                	}
                }
                else if(c.customization.type=="checklist")
                {
                	
                    for(var k=0; k<c.possibleValues.length; k++)
                    {
                        var pv = c.possibleValues[k];
                        if(pv.isSet==true)
                        {
                        	var control = document.getElementById("tcCustomizationParameter_"+c.customization.id+"_pv_"+pv.id);
                            if(control!=null)control.checked = true;                        	
                        }
                    }
                    
                }
                
            }
        }

        //Rendering test-case attachments
        document.getElementById("divTestCaseAttachmentsUploadForm").style.display = "block";
        document.getElementById("divTestCaseAttachmentsLayout").innerHTML = renderAttachmentsLayout(testCaseLayout.document.attachments);
        document.forms.formAttachmentUpload.documentId.value = testCaseLayout.document.id;

		//Checking whether the Advanced Mode is selected
		if(testCaseEditMode==1)
		{
			switchTCAdvancedMode();
		}
        
		if(userId>0)
		{
			showForTestcaseOperations();
		}
    }
    else if(response.result=="error")
    {
        alert(response.text);
    }
}



function onNewTestCase()
{
	var selectId = tree.getSelectedItemId();
	if(selectId!=null && selectId!="")
	{
		var testCaseLayout = createTestCaseLayout();
		
		var folderId = 0;
		if(selectId[0]=='p')
		{
			folderId = 0;
			testCaseLayout.document.projectId = selectId.substring(1);
		}
		else if(selectId[0]=='f')
        {
			folderId = selectId.substring(1);
        }
		else
		{
			alert("You have to select a folder");
			return;
		}

	    document.getElementById("divTestCaseAttachmentsUploadForm").style.display = "none";
	    document.getElementById("divTestCaseAttachmentsLayout").innerHTML = "The test-case is not created yet. In order to upload files the test-case should be already created.";
		
		testCaseLayout.div.style.display = "block";
        testCaseLayout.document.folderId = folderId;
        currentLayout.testCaseName.value = "";
        currentLayout.testCaseDescription.value = "";
        addTestCaseStep();
        
        var btn = document.getElementById("buttonTestCaseSubmit");
        if(btn!=null){
        	btn.value = "Create";
            btn.setAttribute("onclick","saveTestCase();");	
        }
	}
	else alert("You haven't selected a folder");
}


function onSaveTestCaseResponse(loader)
{
	hideTCLoadingIcon();
	var str = loader.xmlDoc.responseText;
    var obj = eval("("+str+")");

    if(obj.result == "created")
    {
        //Inserting the new test-case item to the tree
        if(obj.object.folderId>0)
        {
            tree.insertNewChild(
                       "f"+obj.object.folderId,
                       "dtc"+obj.object.id,
                       obj.object.name,
                       0,
                       "iconTestCase.png",
                       "iconTestCase.png",
                       "iconTestCase.png",
                       "CHECKED"
                       );
            tree.setCheck("dtc"+obj.object.id, false);
            onPanelMinimize("testCaseBody","testCaseBody");
        }
        else
        {
            tree.insertNewChild(
                       "p"+obj.object.projectId,
                       "dtc"+obj.object.id,
                       obj.object.name,
                       0,
                       "iconTestCase.png",
                       "iconTestCase.png",
                       "iconTestCase.png",
                       "CHECKED"
                       );
            tree.setCheck("dtc"+obj.object.id, false);
            onPanelMinimize("testCaseBody","testCaseBody");
        }
        hideAllLayouts();
        
        loadTestCase(obj.object.id);
    }
    else if(obj.result=="edited")
    {
        showTCInformation("<b>Saved test-case</b>: \""+obj.object.name+"\"");
        tree.setItemText("dtc"+obj.object.id,obj.object.name);
    }
    else if(obj.result=="error")
    {
        alert(obj.object.type+" "+obj.object.text);
    }
}
function switchTCAdvancedMode()
{
	var doc = updateTestCaseModel();

	var text="";
    for(var i=0;i<doc.steps.length;i++)
    {
        text+="@"+doc.steps[i].action+"\n";
		text+="^"+doc.steps[i].expected;
		if(i!=doc.steps.length-1)
		{
			text+="\n";
		}
    }
	
	testCaseEditMode = _MODE_ADVANCED;
	
	document.getElementById("tcAdvancedModeTextarea").value = "";
	document.getElementById("divTestCaseSteps").style.display = "none";
    document.getElementById("divTestCaseAdvancedMode").style.display = "block";
    
    document.getElementById("tcAdvancedModeTextarea").value = text;

    document.getElementById("tabTCPreviewMode").className = "custom-tab";
    document.getElementById("tabTCTableMode").className = "custom-tab";
    document.getElementById("tabTCAdvancedMode").className = "custom-tab-selected";
}
function switchTCTableMode()
{
	var doc;
	
	if(testCaseEditMode == _MODE_ADVANCED){
		//switching from advanced mdoe
		doc = updateTestCaseModelAdvancedMode();	
	}
	else{
		//Switching from preview
		doc = currentLayout.document;
	}
	testCaseEditMode = _MODE_TABLE;    
        
    document.getElementById("divTestCaseSteps").style.display = "block";
    document.getElementById("divTestCaseAdvancedMode").style.display = "none";

    document.getElementById("tabTCPreviewMode").className = "custom-tab";
    document.getElementById("tabTCTableMode").className = "custom-tab-selected";
    document.getElementById("tabTCAdvancedMode").className = "custom-tab";
    
    renderTestCaseByModel(doc);
    
}
function switchTCPreviewMode(){
    var doc;
    
    if(testCaseEditMode == _MODE_ADVANCED){
        //switching from advanced mdoe
        doc = updateTestCaseModelAdvancedMode();    
    }
    else if(testCaseEditMode == _MODE_TABLE){
    	doc = updateTestCaseModel();
    }
    else{
        doc = currentLayout.document;
    }
    testCaseEditMode = _MODE_PREVIEW;    
        
    document.getElementById("divTestCaseSteps").style.display = "block";
    document.getElementById("divTestCaseAdvancedMode").style.display = "none";

    document.getElementById("tabTCPreviewMode").className = "custom-tab-selected";
    document.getElementById("tabTCTableMode").className = "custom-tab";
    document.getElementById("tabTCAdvancedMode").className = "custom-tab";
    
    renderTestCaseByModel(doc);
}


function switchTCDetails()
{
	Tab.switchTab("tabTCDetails","divTCDetails", ["tabTCSettings","tabTCAttachments"], ["divTCSettings","divTCAttachments"]);
}
function switchTCSettings()
{
	Tab.switchTab("tabTCSettings","divTCSettings",["tabTCDetails","tabTCAttachments"],["divTCDetails","divTCAttachments"]);
}
function switchTCAttachments()
{
	Tab.switchTab("tabTCAttachments","divTCAttachments",["tabTCSettings","tabTCDetails"],["divTCSettings","divTCDetails"]);
}
function deleteTestCase()
{
	if(confirm("Are you sure you want to delete this test-case?")){
		deleteDocument(currentLayout.document.id);	
	}
}



function deleteDocument(id)
{
	if(confirm("Are you sure you want to delete this file?")){
		dhtmlxAjax.post("../document/document-delete", "id="+id, onDeleteDocumentResponse);
		hideAllLayouts();
		showLoadingIcon();
	}
}
function onDeleteDocumentResponse(loader)
{
	hideLoadingIcon();
    var str = loader.xmlDoc.responseText;
    var response = eval("("+str+")");

    if(response.result == "deleted-testcase")
    {
        tree.deleteItem("dtc"+response.object.id,true);
        showInformation("<b>Deleted test-case</b>: "+response.object.name);
    }
    else if(response.result == "deleted-file")
    {
        tree.deleteItem("dfl"+response.object.id,true);
        showInformation("<b>Deleted file</b>: "+response.object.name);
    }
    else if(response.result == "error")
    {
        alert(response.type+":\n"+response.text);
    }
}

function onNewFile()
{
	if(currentLayout!=null)
    {
        currentLayout.div.style.display="none";
    }
	var selectId = tree.getSelectedItemId();
    var folderId = 0;
    var projectId = currentProjectId;
    if(selectId!=null && selectId!="")
    {
        if(selectId[0]=='p')
        {
            folderId = 0;
            projectId = selectId.substring(1);
        }
        else if(selectId[0]=='f')
        {
            folderId = selectId.substring(1);
        }

        currentLayout = new Layout();
        currentLayout.div = document.getElementById("divFileUploadLayout");
        currentLayout.div.style.display = "block";

        document.forms.formFileUpload.action = "../document/file-create";
        document.forms.formFileUpload.folderId.value = folderId;
        document.forms.formFileUpload.projectId.value = projectId;
        document.forms.formFileUpload.id.value = "";
        document.forms.formFileUpload.name.value = "";
        document.forms.formFileUpload.file.value = "";
        document.forms.formFileUpload.description.value = "";
        var divDown = document.getElementById("divFileDownload");
        divDown.innerHTML = "";
        
    }
    else alert("You haven't selected a folder");
    
}
function loadFileDocument(id)
{
    showLoadingIcon();
    dhtmlxAjax.post("../document/file-display", "id="+id, onLoadFileDocumentResponse);
}
function onLoadFileDocumentResponse(loader)
{
    hideLoadingIcon();

    var str = loader.xmlDoc.responseText;
    var response = eval("("+str+")");

    showForFileOperations();
    
    if(response.result == "file")
    {
        var file = response.object;
    	currentLayout = new Layout();
        currentLayout.div = document.getElementById("divFileUploadLayout");
        currentLayout.div.style.display = "block";

        var divDown = document.getElementById("divFileDownload");
        divDown.innerHTML = "<a href=\"../document/file-download?id="+file.id+"\">Download File</a>";

        document.forms.formFileUpload.action = "../document/file-edit";
        document.forms.formFileUpload.folderId.value = file.folderId;
        document.forms.formFileUpload.projectId.value = file.projectId;
        document.forms.formFileUpload.id.value = file.id;
        document.forms.formFileUpload.name.value = file.name;
        document.forms.formFileUpload.file.value = "";
        document.forms.formFileUpload.description.value = file.description;
    }
    else if(response.result=="error")
    {
    	alert(response.type+":"+response.text);
    }
}

function deleteFile()
{
	if(currentLayout!=null)
    {
        currentLayout.div.style.display="none";
    }
    var selectId = tree.getSelectedItemId();

    if(selectId!=null && selectId!="")
    {
        if(selectId.substring(0,3) == "dfl")
        {
            id = selectId.substring(3);
            showLoadingIcon();
            dhtmlxAjax.post("../document/file-delete", "id="+id, onDeleteDocumentResponse);
        }
    }
}


function deleteDocumentAttachment(id){
    if(confirm("Are you sure you want to delete this attachment?")){
        dhtmlxAjax.post("../document/attachment-delete", "id="+id, onDeleteAttachmentResponse);
        showLoadingIcon();
    }
}
function onDeleteAttachmentResponse(loader){
    hideLoadingIcon();
    var str = loader.xmlDoc.responseText;
    var response = eval("("+str+")");

    if(response.result == "deleted-attachment"){
    	var attachments = response.object;
    	currentLayout.document.attachments = attachments;
    	document.getElementById("divTestCaseAttachmentsLayout").innerHTML = renderAttachmentsLayout(attachments);
    }
    else if(response.result == "error"){
        alert(response.type+":\n"+response.text);
    }
}
</script>


<div id="divForFolderOperations" style="display:none;">
    <c:if test="${user.hasPermissions.document_managment == true}">
        <a class="nice-link" href="javascript:onNewTestCase();">New Test-Case</a> | <a class="nice-link" href="javascript:onNewFile();" >New File</a>
    </c:if>
</div>
<div id="divForTestcaseOperations" style="display:none;">
    <c:if test="${user.hasPermissions.document_managment == true}">
        <tag:link name="Delete Test-Case " url="javascript:deleteTestCase();" js="true"/>
    </c:if>
</div>
<div id="divForFileOperations" style="display:none;">
    <c:if test="${user.hasPermissions.document_managment == true}">
        <tag:link name="Delete File" url="javascript:deleteFile();" js="true"/>
    </c:if>
</div>
<table width="100%"  border="0" align="left">
    <tr>
        <td colspan="2">
            <div style="width:100%">
			    <div id="divFileUploadLayout" style="display:none;width:100%;">
			         <tag:panel title="Upload File" align="Center" width="100%">
			         <form   name="formFileUpload" 
			                 action="../document/file-create" 
			                 method="post" 
			                 target="iframeFileUploader"
			                 enctype="multipart/form-data">
			             
			             <input type="hidden" name="id" />    
			             <input type="hidden" name="projectId" />
			             <input type="hidden" name="folderId" />
			             <div class="small-description">Name:</div>
			             <input type="text" name="name" value="" style="width:100%;"/>
			             <div class="small-description">Description:</div>
                         <textarea name="description" rows="6" style="width:100%;"></textarea>
                         <br/>
                         <div class="small-description">File:</div>
                         <input type="file" name="file"/>
                         <br/>
                         <br/>
                         <div id="divFileDownload">
                         </div>
                         <br/>
                         <tag:submit value="Upload"></tag:submit>
			         </form>
			         </tag:panel>
			    </div>
			    
			    
			    <div id="divTestCaseLayout" style="display:none;width:100%;">
			        <div id="testCaseBody">
				        <tag:panel title="Create Test-Case" maximizing="true" maximizeDivName="testCaseBody" id="testCaseBody" align="Center" width="100%">
				        
				        <div id="divTabs">
				            <table border="0" cellpadding="0" cellspacing="0">
				                <tr>
				                    <td width="10px"><span> </span></td>
				                    <td>
				                        <tag:tab id="tabTCDetails" href="javascript:switchTCDetails();" selected="true" text="Details"></tag:tab>
				                    </td>
				                    <td>
				                        <tag:tab id="tabTCSettings" href="javascript:switchTCSettings();" selected="false" text="Settings"></tag:tab>
				                    </td>
				                    <td>
                                        <tag:tab id="tabTCAttachments" href="javascript:switchTCAttachments();" selected="false" text="Attachments"></tag:tab>
                                    </td>
				                </tr>
				            </table>
				        </div>
				        <div class="tab-panel">
				            <div id="divTCDetails">
					            <div class="small-description">Name:</div>
	                            <input class="border-textfield" id="testCaseName" name="name" type="text" style="width:100%"></input>
	                            <br/><br/>
	                            <div class="small-description">Description:</div>
	                            <textarea class="border-textarea" rows="7" style="width:100%" id="testCaseDescription" name="description"></textarea>
	                        </div>
	                        <div id="divTCSettings" style="display:none;">
	                            <div id="divTCCustomizationLayout">
	                            </div>
	                            <br/>
	                            <br/>
	                        </div>
	                        <div id="divTCAttachments" style="display:none;">
	                           <tag:panel-border title="Attachments" align="center" width="100%">
	                               <div id="divTestCaseAttachmentsLayout">
	                                   There are no attachments for this test-case
                                   </div>
	                           </tag:panel-border>
	                           <div id="divTestCaseAttachmentsUploadForm">
	                               <form name="formAttachmentUpload" 
                                            action="../document/attachment-upload" 
                                            method="post" 
                                            target="iframeFileUploader"
                                            enctype="multipart/form-data">
                                        <input name="documentId" type="hidden"/>
                                        <tag:panel-border title="Upload Attachment" align="center" width="100%">
                                            Name:<br/>
                                            <input id="attachmentName" class="border-textfield" name="name" style="width:100%;"/><br/>
                                            
                                            Description:<br/>
                                            <textarea id="attachmentDescription" name="description" class="border-textarea" rows="7" style="width:100%"></textarea><br/>
                                            
                                            File:<br/>
                                            <input name="file" type="file"/>
                                            
                                            <tag:submit value="Upload" ></tag:submit>
                                        </tag:panel-border>
                                   </form>
	                           </div>
	                        </div>
	                    </div>
						<div style="display:${user!=null?'block':'none'};">
							<table width="100%">
								<tr>
					                <td align="left">
					                    <table border="0" height="60px">
					                        <tr>
					                            <td height="60px">
					                               <c:if test="${user.hasPermissions.document_managment == true}">
					                                   <tag:submit id="buttonTestCaseSubmit" value=""></tag:submit>
					                               </c:if>
					                            </td>
										        <td height="60px">
										            <div id="divTCLoadingIcon" style="display:none">
										                <img src="../images/loading.gif"/>
										            </div>
										            <div id="divTCInformationBox">
	                                                </div>
										        </td>
										    </tr>
										</table>
					                </td>
					            </tr>
							</table>
						</div>
                        <div id="divTabs">
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td width="10px"><span> </span></td>
                                    <td>
                                        <tag:tab id="tabTCPreviewMode" href="javascript:switchTCPreviewMode();" selected="true" text="Preview"></tag:tab>
                                    </td>
                                    <td>
                                        <tag:tab id="tabTCTableMode" href="javascript:switchTCTableMode();" selected="false" text="Table Mode"></tag:tab>
                                    </td>
                                    <td>
                                        <tag:tab id="tabTCAdvancedMode" href="javascript:switchTCAdvancedMode();" selected="false" text="Advanced Mode"></tag:tab>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="tab-panel">
	                        <table width="100%">
					            <tr>
					                <td>
					                    <div class="small-description">Steps:</div>
					                    <div id="divTestCaseSteps">
					                    </div>
					                    <div id="divTestCaseAdvancedMode" style="display:none;">
					                        <textarea class="border-textarea" id="tcAdvancedModeTextarea" rows="20" style="width:100%;"></textarea>
	                                    </div>
					                </td>
					            </tr>
					        </table>
					    </div>
				        </tag:panel>
				    </div>
			    </div>
			</div>        
        </td>
    </tr>
</table>
